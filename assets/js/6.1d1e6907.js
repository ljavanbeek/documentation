(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{130:function(e,t,s){e.exports=s.p+"assets/img/Pterodactyl_Create_New_Egg_Process_Management.9660bca4.png"},132:function(e,t,s){e.exports=s.p+"assets/img/Pterodactyl_Create_New_Egg_Select.12d53424.png"},133:function(e,t,s){e.exports=s.p+"assets/img/Pterodactyl_Create_New_Egg_Copy_Settings_From.e315f86d.png"},134:function(e,t,s){e.exports=s.p+"assets/img/Pterodactyl_Create_New_Egg_Variables.85aa9032.png"},135:function(e,t,s){e.exports=s.p+"assets/img/Pterodactyl_Create_New_Egg_Startup.2942e2f7.png"},166:function(e,t,s){"use strict";s.r(t);var a=[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"creating-a-custom-egg"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-custom-egg","aria-hidden":"true"}},[this._v("#")]),this._v(" Creating a Custom Egg")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"warning custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),t("p",[this._v("You should not edit existing services or options that ship with the Panel. Each upgrade we push can make minor\nchanges to these, and you'll lose any changes you've made.")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#create-new-option"}},[e._v("Create New Option")])]),s("li",[s("a",{attrs:{href:"#configure-process-management"}},[e._v("Configure Process Management")]),s("ul",[s("li",[s("a",{attrs:{href:"#stop-command"}},[e._v("Stop Command")])]),s("li",[s("a",{attrs:{href:"#log-storage"}},[e._v("Log Storage")])]),s("li",[s("a",{attrs:{href:"#configuration-files"}},[e._v("Configuration Files")])]),s("li",[s("a",{attrs:{href:"#start-configuration"}},[e._v("Start Configuration")])])])]),s("li",[s("a",{attrs:{href:"#copy-settings-from"}},[e._v("Copy Settings From")])]),s("li",[s("a",{attrs:{href:"#egg-variables"}},[e._v("Egg Variables")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The first thing you'll need to do is create a new service. In this case, the name and description speak for themselves\nin this case. The "),t("code",[this._v("Folder Name")]),this._v(" "),t("em",[this._v("must be a unique name")]),this._v(" not being used by any other service, and should only\ncontain letters, numbers, underscores, and dashes. This is the name of the folder where the daemon will be storing\nthe service options on the daemon.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"create-new-option"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-new-option","aria-hidden":"true"}},[this._v("#")]),this._v(" Create New Option")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("After creating the service, in the bottom right of the page you should see a button titled "),t("code",[this._v("New Egg")]),this._v(", press it.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:s(132),alt:""}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("You will be taken to a new service option page which is where most of the configuration happens. The first thing\nyou need to do is select your service that you created previously from the "),t("code",[this._v("Associated Nest")]),this._v(" dropdown.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:s(130),alt:""}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("After that, enter an Option Name to describe it, in this case I am using "),t("code",[this._v("Widget")]),this._v(". You will also need to provide a\n"),t("em",[this._v("valid")]),this._v(" docker image, as well as a start command to be assigned to servers under this service option (remember, this\ncan be tweaked per-server if needed).")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"configure-process-management"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configure-process-management","aria-hidden":"true"}},[this._v("#")]),this._v(" Configure Process Management")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:s(130),alt:""}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The first field you'll encounter is "),t("code",[this._v("Copy Settings From")]),this._v(". The default selection is "),t("code",[this._v("None")]),this._v(". That is expected, and okay.\nThis dropdown is discussed at the end of this article.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"stop-command"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stop-command","aria-hidden":"true"}},[this._v("#")]),this._v(" Stop Command")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Next, you'll encounter "),s("code",[e._v("Stop Command")]),e._v(" and, as the name implies, this should be the command used to safely stop the\noption. For some games, this is "),s("code",[e._v("stop")]),e._v(" or "),s("code",[e._v("end")]),e._v(". Certain programs and games don't have a specified stop command, so\nyou can enter "),s("code",[e._v("^C")]),e._v(" to have the daemon execute a "),s("code",[e._v("SIGINT")]),e._v(" to end the process.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"log-storage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-storage","aria-hidden":"true"}},[this._v("#")]),this._v(" Log Storage")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{attrs:{class:"token punctuation"}},[this._v("{")]),t("span",{attrs:{class:"token punctuation"}},[this._v("}")]),this._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"configuration-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration-files","aria-hidden":"true"}},[this._v("#")]),this._v(" Configuration Files")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The next block is one of the most complex blocks, the "),t("code",[this._v("Configuration Files")]),this._v(" descriptor. The Daemon will process this\nblock prior to booting the server to ensure all of the required settings are defined and set correctly.")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{attrs:{class:"token property"}},[e._v('"server.properties"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),s("span",{attrs:{class:"token property"}},[e._v('"parser"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('"properties"')]),s("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),s("span",{attrs:{class:"token property"}},[e._v('"find"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),s("span",{attrs:{class:"token property"}},[e._v('"server-ip"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('"0.0.0.0"')]),s("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),s("span",{attrs:{class:"token property"}},[e._v('"enable-query"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('"true"')]),s("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),s("span",{attrs:{class:"token property"}},[e._v('"server-port"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('"{{server.build.default.port}}"')]),s("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),s("span",{attrs:{class:"token property"}},[e._v('"query.port"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('"{{server.build.default.port}}"')]),e._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[s("code",[e._v("file")]),e._v(" â€” This parser goes based on matching the beginning of lines, and not a specific property like the other four.\nAvoid using this parser if possible.")]),e._v(" "),s("li",[s("code",[e._v("yaml")]),e._v(" (supports "),s("code",[e._v("*")]),e._v(" notation)")]),e._v(" "),s("li",[s("code",[e._v("properties")])]),e._v(" "),s("li",[s("code",[e._v("ini")])]),e._v(" "),s("li",[s("code",[e._v("json")]),e._v(" (supports "),s("code",[e._v("*")]),e._v(" notation)")]),e._v(" "),s("li",[s("code",[e._v("xml")])])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Once you have defined a parser, we then define a "),s("code",[e._v("find")]),e._v(" block which tells the Daemon what specific elements to find\nand replace. In this example, we have provided four separate items within the "),s("code",[e._v("server.properties")]),e._v(" file that we want to\nfind and replace to the assigned values. You can use either an exact value, or define a specific server setting from\nthe "),s("code",[e._v("server.json")]),e._v(" file. In this case, we're assigning the default server port to be used as the "),s("code",[e._v("server-port")]),e._v(" and\n"),s("code",[e._v("query.port")]),e._v(". "),s("strong",[e._v("These placeholders are case sensitive, and should have no spaces in them.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("You can have multiple files listed here, the Daemon will process them in parallel before starting the server. When\nusing "),t("code",[this._v("yaml")]),this._v(" or "),t("code",[this._v("json")]),this._v(" you can use more advanced searching for elements.")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{attrs:{class:"token property"}},[e._v('"config.yml"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),s("span",{attrs:{class:"token property"}},[e._v('"parser"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('"yaml"')]),s("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),s("span",{attrs:{class:"token property"}},[e._v('"find"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),s("span",{attrs:{class:"token property"}},[e._v('"listeners[0].query_enabled"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token boolean"}},[e._v("true")]),s("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),s("span",{attrs:{class:"token property"}},[e._v('"listeners[0].query_port"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('"{{server.build.default.port}}"')]),s("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),s("span",{attrs:{class:"token property"}},[e._v('"listeners[0].host"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('"0.0.0.0:{{server.build.default.port}}"')]),s("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),s("span",{attrs:{class:"token property"}},[e._v('"servers.*.address"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                "),s("span",{attrs:{class:"token property"}},[e._v('"127.0.0.1"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('"{{config.docker.interface}}"')]),s("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                "),s("span",{attrs:{class:"token property"}},[e._v('"localhost"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('"{{config.docker.interface}}"')]),e._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("In this example, we are parsing "),s("code",[e._v("config.yml")]),e._v(" using the "),s("code",[e._v("yaml")]),e._v(" parser. The first three find items are simply assigning\nports and IPs for the first listener block. The last one, "),s("code",[e._v("servers.*.address")]),e._v(" uses wildcard matching to match any items\nwithin the "),s("code",[e._v("servers")]),e._v(" block, and then finding each "),s("code",[e._v("address")]),e._v(" block for those items.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{pre:!0},[t("p",[this._v("An advanced feature of this file configuration is the ability to define multiple find and replace statements for a\nsingle matching line. In this case, we are looking for either "),t("code",[this._v("127.0.0.1")]),this._v(" or "),t("code",[this._v("localhost")]),this._v(" and replacing them with the\ndocker interface defined in the configuration file using "),t("code",[this._v("{{config.docker.interface}}")]),this._v(".")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"start-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#start-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Start Configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The last block to configure is the "),t("code",[this._v("Start Configuration")]),this._v(" for servers running using this service option.")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{attrs:{class:"token property"}},[e._v('"done"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('")! For help, type "')]),s("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{attrs:{class:"token property"}},[e._v('"userInteraction"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n        "),s("span",{attrs:{class:"token string"}},[e._v('"Go to eula.txt for more info."')]),e._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),s("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("In the example block above, we define "),s("code",[e._v("done")]),e._v(" as the entire line, or part of a line that indicates a server is done\nstarting, and is ready for players to join. When the Daemon sees this output, it will mark the server as "),s("code",[e._v("ON")]),e._v(" rather\nthan "),s("code",[e._v("STARTING")]),e._v(". We can also define "),s("code",[e._v("userInteraction")]),e._v(" as an array of lines that should indicate that the server\n"),s("em",[e._v("did not crash")]),e._v(", but rather stopped because the user needs to perform some action.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("In this case, we define it as the line asking users to agree to the EULA. You are not required to have\n"),t("code",[this._v("userInteraction")]),this._v(" lines, however if you are going to leave it empty, it should still be defined with an empty array,\nas shown below:")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{attrs:{class:"token property"}},[e._v('"done"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token string"}},[e._v('")! For help, type "')]),s("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{attrs:{class:"token property"}},[e._v('"userInteraction"')]),s("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),s("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"copy-settings-from"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#copy-settings-from","aria-hidden":"true"}},[this._v("#")]),this._v(" Copy Settings From")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("As mentioned above, there is a unique "),t("code",[this._v("Copy Settings From")]),this._v(" dropdown when adding a new option. This gives you the\nability to, as the name suggests, copy settings defined above from a different option.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:s(133),alt:""}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("For example, lets look at the "),t("code",[this._v("Sponge (SpongeVanilla)")]),this._v(" service option.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("As you can see, it as been told to copy settings from "),t("code",[this._v("Vanilla Minecraft")]),this._v(". This means that any of the fields that are\nleft blank will inherit from the assigned parent. We then define a specific "),t("code",[this._v("userInteraction")]),this._v(" line that is different in\nSponge compared to Vanilla, but tell it that everything else should remain the same.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("em",[this._v("Please note that "),t("code",[this._v("Copy Settings From")]),this._v(" does not support nested copies, you can only copy from a single parent,\nand that parent "),t("strong",[this._v("must not be copying from another option.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"egg-variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#egg-variables","aria-hidden":"true"}},[this._v("#")]),this._v(" Egg Variables")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("One of the great parts of the Egg Variables is the ability to define specific variables that users and/or admins can\ncontrol to tweak different settings without letting users modify the startup command. To create new variables, or edit\nexisting ones, visit the new service option you created, and click the "),t("code",[this._v("Variables")]),this._v(" tab at the top of the page. Lets take\na look at an example variable that we can create.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:s(134),alt:""}})])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{pre:!0},[s("p",[e._v("The name and description are rather self-explanitory, so I'll skip down to the "),s("code",[e._v("Environment Variable")]),e._v(" box. This should\nbe an Alpha-Numeric name with underscores, and should be uppercase. This will be the name of the environment variable\nwhich can be accessed in the startup command as "),s("code",[e._v("{{WOOZLE_WOO}}")]),e._v(", within file modifications as "),s("code",[e._v("{{env.WOOZLE_WOO}}")]),e._v(", or\njust "),s("code",[e._v("${WOOZLE_WOO}")]),e._v(" in any shell scripts (it is passed through in the environment). We also define a default value for\nthis environment variable in this example, but it is not required to do so.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The next section is "),t("code",[this._v("Permissions")]),this._v(", which is a dropdown with two options: "),t("code",[this._v("Users Can View")]),this._v(" and "),t("code",[this._v("Users Can Edit")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("code",[this._v("Users Can View")]),this._v(" â€” allows a user to view the field on the front-end, as well as the assigned value of that variable.\nThey will be able to see it replaced in their startup command.")]),this._v(" "),t("li",[t("code",[this._v("Users Can Edit")]),this._v(" â€” allows a user to edit the value of the variable, for example the name of their "),t("code",[this._v("server.jar")]),this._v(" file\nif running Minecraft.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:s(135),alt:""}})])}],n=s(0),r=Object(n.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),s("p"),e._m(2),s("p"),e._v(" "),e._m(3),e._v(" "),s("p",[e._v("The default start command is also required, however it can be changed per-option.")]),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),s("p",[s("em",[e._v("Docker images must be specifically designed to work with Pterodactyl Panel.")]),e._v(" You should read more about that in\nour "),s("router-link",{attrs:{to:"/community/config/eggs/creating_a_custom_image.html"}},[e._v("Creating a Docker Image")]),e._v(" guide.")],1),e._v(" "),e._m(10),e._v(" "),s("p",[e._v("This is perhaps the most important step in this service option configuration, as this tells the Daemon how to run everything.")]),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),s("p",[e._v("Logs are competely handeled by the daemon now and use the docker logs to output the complete output from the server.\nThis can be set like below.")]),e._v(" "),e._m(16),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19),s("p",[e._v("In this example, we are telling the Daemon to read "),s("code",[e._v("server.properties")]),e._v(" in "),s("code",[e._v("/home/container")]),e._v(". Within this block, we\ndefine a "),s("code",[e._v("parser")]),e._v(", in this case "),s("code",[e._v("properties")]),e._v(" but the following are "),s("a",{attrs:{href:"https://github.com/Pterodactyl/Daemon/blob/develop/src/helpers/fileparser.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("valid parsers"),s("OutboundLink")],1),e._v(":")]),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),e._m(23),e._m(24),e._v(" "),e._m(25),e._v(" "),e._m(26),e._v(" "),e._m(27),e._v(" "),e._m(28),e._m(29),e._v(" "),e._m(30),e._v(" "),e._m(31),s("p",[e._v("That concludes basic service option configuration.")]),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),e._m(34),e._v(" "),s("p",[e._v("In the panel, we use this to copy settings that remain the same between similar service options, such as many of the\nMinecraft options.")]),e._v(" "),e._m(35),e._v(" "),e._m(36),e._v(" "),e._m(37),e._v(" "),e._m(38),e._v(" "),e._m(39),e._v(" "),e._m(40),e._v(" "),e._m(41),e._v(" "),e._m(42),e._v(" "),e._m(43),e._v(" "),s("p",[e._v("You should use caution here, even if you assign neither of the permissions it does not mean that the value will be\nhidden. Crafty users will still be able to get the environment on their server. In most cases this is simply hiding\nit from the user, and then used within the Dockerfile to perform actions, thus it is not important for the user to see.")]),e._v(" "),s("p",[e._v("Finally, you will need to define some input rules to validate the value against. In this example, we use\n"),s("code",[e._v("required|string|between:1,10")]),e._v(", which means the field is "),s("code",[e._v("required")]),e._v(", must be a "),s("code",[e._v("string")]),e._v(", and must be between "),s("code",[e._v("1")]),e._v(" and\n"),s("code",[e._v("10")]),e._v(" characters in length. You can find "),s("a",{attrs:{href:"https://laravel.com/docs/5.6/validation#available-validation-rules",target:"_blank",rel:"noopener noreferrer"}},[e._v("all of the available validation rules"),s("OutboundLink")],1),e._v("\non the Laravel website. You can also use ReGEX based validation by using the "),s("code",[e._v("regex:")]),e._v(" rule flag. For example,\n"),s("a",{attrs:{href:"https://regex101.com/r/k4oEOn/1",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("required|regex:/^([\\w\\d._-]+)(\\.jar)$/")]),s("OutboundLink")],1),e._v(" will require the field, and will match the\nregex as any letters or numbers ("),s("code",[e._v("\\w\\d")]),e._v(") including underscore ("),s("code",[e._v("_")]),e._v("), periods ("),s("code",[e._v(".")]),e._v("), and dashes ("),s("code",[e._v("-")]),e._v(") ending in "),s("code",[e._v(".jar")]),e._v(".")]),e._v(" "),s("p",[e._v("They will then be visible when managing the startup for a server in both the Admin CP and on the Front-End.")]),e._v(" "),e._m(44)])},a,!1,null,null,null);t.default=r.exports}}]);