(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{169:function(e,t,a){"use strict";a.r(t);var r=a(0),o=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"minecraft"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minecraft","aria-hidden":"true"}},[e._v("#")]),e._v(" Minecraft")]),e._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#network-configuration"}},[e._v("Network Configuration")]),a("ul",[a("li",[a("a",{attrs:{href:"#setting-up-the-network"}},[e._v("Setting up the Network")])]),a("li",[a("a",{attrs:{href:"#adding-additional-servers"}},[e._v("Adding Additional Servers")])]),a("li",[a("a",{attrs:{href:"#in-conclusion"}},[e._v("In Conclusion")])]),a("li",[a("a",{attrs:{href:"#ufw-firewall"}},[e._v("UFW Firewall")])])])])])]),a("p"),e._v(" "),a("h2",{attrs:{id:"network-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#network-configuration","aria-hidden":"true"}},[e._v("#")]),e._v(" Network Configuration")]),e._v(" "),a("p",[e._v("This guide was written for Bungeecord, but should work fine for Waterfall and Hexacord servers.")]),e._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("For the setup described below, it is necessary that all servers are on the same node.")])]),e._v(" "),a("h3",{attrs:{id:"setting-up-the-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-the-network","aria-hidden":"true"}},[e._v("#")]),e._v(" Setting up the Network")]),e._v(" "),a("p",[e._v("The ideal setup for this involves a separated internal network with only one access point — the BungeeCord server —\nwhich is an easy configuration with Pterodactyl. In order to create a Bungeecord network you'll first need to add an\nallocation to your Node that makes your Bungeecord server publicly accessible. This allocation should be for your\npublic IP address and the default port you wish to use — generally "),a("code",[e._v("25565")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"adding-additional-servers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adding-additional-servers","aria-hidden":"true"}},[e._v("#")]),e._v(" Adding Additional Servers")]),e._v(" "),a("p",[e._v("All other servers that are a part of the network should be created on local interfaces — meaning they are not publicly\naccessible. Create new allocations on the localhost IP address "),a("code",[e._v("127.0.0.1")]),e._v(" with some ports for the servers to use.\nYou can also enter a port range, e.g. "),a("code",[e._v("30000-30010")]),e._v(" which will get you 11 ports.")]),e._v(" "),a("p",[e._v("Now create new servers and be sure to use your internal allocations — "),a("code",[e._v("127.0.0.1")]),e._v(" — for each of them. To add the\nservers to your network you'll use "),a("code",[e._v("172.18.0.1:<port>")]),e._v(" — or "),a("code",[e._v("127.0.0.1")]),e._v(" which will automatically be resolved to your\nDocker network interface IP — as the IP address in your configuration file.")]),e._v(" "),a("h3",{attrs:{id:"in-conclusion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in-conclusion","aria-hidden":"true"}},[e._v("#")]),e._v(" In Conclusion")]),e._v(" "),a("ul",[a("li",[e._v("Only the proxy server (Bungeecord/Hexacord/Waterfall) should be attached to your publically accessible IP address.")]),e._v(" "),a("li",[e._v("You should "),a("em",[e._v("not")]),e._v(" make any modifications to IPTables.")]),e._v(" "),a("li",[e._v("All of the servers behind the proxy are safe from direct "),a("em",[e._v("external")]),e._v(" connections, assuming you bind them to "),a("code",[e._v("127.0.0.1")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"ufw-firewall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ufw-firewall","aria-hidden":"true"}},[e._v("#")]),e._v(" UFW Firewall")]),e._v(" "),a("p",[e._v("If you are using a "),a("code",[e._v("ufw")]),e._v(" firewall, it might be necessary to allow access to specific host ports. The following command\nallows incoming requests to "),a("code",[e._v("172.18.0.1")]),e._v(", which is the IP of the actual host server within the docker network. Replace\n"),a("code",[e._v("<LOCALHOST_PORT>")]),e._v(" with any port you want to be accessible. In this case use the port you assigned to the minecraft\nserver you want to add.")]),e._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("The ports you open with this command will be accessible by any server "),a("em",[e._v("on the same node")]),e._v(".")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ufw allow in on pterodactyl0 to 172.18.0.1 port <LOCALHOST_PORT> proto tcp\n")])])])])}],!1,null,null,null);t.default=o.exports}}]);